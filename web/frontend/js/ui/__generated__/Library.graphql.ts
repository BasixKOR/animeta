import * as Types from '../../__generated__/globalTypes';

import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
import { LibraryFilter_CategoryFragmentDoc, LibraryFilter_RecordFiltersFragmentDoc, LibraryFilter_RecordFilterFragmentDoc } from './LibraryFilter.graphql';
export type Library_UserFragment = { __typename?: 'User', name: string | null, isCurrentUser: boolean, categories: Array<{ __typename?: 'Category', databaseId: string, name: string }>, recordFilters: { __typename?: 'RecordFilters', totalCount: number, filteredCount: number, statusType: { __typename?: 'RecordFilter', allCount: number, items: Array<{ __typename?: 'RecordFilterItem', key: string, count: number }> }, categoryId: { __typename?: 'RecordFilter', allCount: number, items: Array<{ __typename?: 'RecordFilterItem', key: string, count: number }> } }, records: { __typename?: 'RecordConnection', nodes: Array<{ __typename?: 'Record', databaseId: string, title: string | null, statusType: Types.StatusType | null, status: string | null, rating: number | null, updatedAt: any | null, hasNewerEpisode: boolean | null }> } };

export type Library_RecordFragment = { __typename?: 'Record', databaseId: string, title: string | null, statusType: Types.StatusType | null, status: string | null, rating: number | null, updatedAt: any | null, hasNewerEpisode: boolean | null };

export type Library_CreateRecordMutationVariables = Types.Exact<{
  input: Types.CreateRecordInput;
}>;


export type Library_CreateRecordMutation = { __typename?: 'Mutation', createRecord: { __typename?: 'CreateRecordResult', record: { __typename?: 'Record', databaseId: string } } };

export const Library_RecordFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Library_record"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Record"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"databaseId"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"statusType"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"rating"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"hasNewerEpisode"}}]}}]} as unknown as DocumentNode<Library_RecordFragment, unknown>;
export const Library_UserFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"Library_user"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isCurrentUser"}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"LibraryFilter_category"}}]}},{"kind":"Field","name":{"kind":"Name","value":"recordFilters"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"statusType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"statusTypeFilter"}}},{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryIdFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"filteredCount"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LibraryFilter_recordFilters"}}]}},{"kind":"Field","name":{"kind":"Name","value":"records"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"statusType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"statusTypeFilter"}}},{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryIdFilter"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"recordOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"Library_record"}}]}}]}}]}}]} as unknown as DocumentNode<Library_UserFragment, unknown>;
export const Library_CreateRecordDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Library_createRecord"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateRecordInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createRecord"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"record"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"databaseId"}}]}}]}}]}}]} as unknown as DocumentNode<Library_CreateRecordMutation, Library_CreateRecordMutationVariables>;