query RecordRoute($recordId: ID!) {
  layoutCurrentUser: currentUser {
    ...UserLayout_currentUser
  }
  
  currentUser {
    databaseId
    isTwitterConnected
  }
  record(id: $recordId) {
    ...RecordRoute_record
  }
}

fragment RecordRoute_record on Record {
  databaseId
  user {
    isCurrentUser
    name
  }
  layoutUser: user {
    ...UserLayout_user
  }
  title
  updatedAt
  ...RecordRoute_header
  ...PostComposer_record
}

fragment RecordRoute_header on Record {
  title
  rating
  user {
    isCurrentUser
    # TODO: load only if user == currentUser
    categories {
      ...RecordRoute_header_category
    }
  }
  category { databaseId }
}

fragment RecordRoute_header_category on Category {
  databaseId
  name
}

query RecordRoute_posts($recordId: ID!) {
  record(id: $recordId) {
    posts(beforeId: null, count: null) {
      nodes {
        ...RecordRoute_post
      }
    }
  }
}

fragment RecordRoute_post on Post {
  databaseId
  statusType
  status
  comment
  containsSpoiler
  updatedAt
  ...PostComment_post
}

mutation RecordRoute_updateTitle($input: UpdateRecordTitleInput!) {
  updateRecordTitle(input: $input) {
    record {
      ...RecordRoute_record
    }
  }
}

mutation RecordRoute_updateCategory($input: UpdateRecordCategoryIdInput!) {
  updateRecordCategoryId(input: $input) {
    record {
      ...RecordRoute_record
    }
  }
}

mutation RecordRoute_updateRating($input: UpdateRecordRatingInput!) {
  updateRecordRating(input: $input) {
    record {
      ...RecordRoute_record
    }
  }
}

mutation RecordRoute_createPost($input: CreatePostInput!) {
  createPost(input: $input) {
    post {
      databaseId
    }
  }
}

mutation RecordRoute_deletePost($input: DeletePostInput!) {
  deletePost(input: $input) {
    record {
      ...RecordRoute_record
    }
  }
}

mutation RecordRoute_deleteRecord($input: DeleteRecordInput!) {
  deleteRecord(input: $input) {
    deleted
  }
}
