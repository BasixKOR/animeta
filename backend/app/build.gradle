import cz.habarta.typescript.generator.TypeScriptFileType

plugins {
    id 'com.palantir.docker' version '0.20.1'
}

apply plugin: 'org.springframework.boot'

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-webflux"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.cloud:spring-cloud-gcp-starter-storage:1.1.0.M1"
    compile "io.sentry:sentry-logback:1.7.27"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
    compile "com.squareup.okio:okio:1.13.0"
    compile "com.squareup.okhttp3:okhttp:3.9.1"
    compile "com.google.guava:guava:23.2-jre"
    compile "com.querydsl:querydsl-jpa"
    compile "org.apache.commons:commons-csv:1.5"
    kapt "com.querydsl:querydsl-apt:4.4.0:jpa"
    compile "org.postgresql:postgresql"
    compile "org.liquibase:liquibase-core"
    compile "org.jsoup:jsoup:1.11.3"
    compile 'org.twitter4j:twitter4j-core:4.0.7'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "ru.yandex.qatools.embed:postgresql-embedded:2.9"
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
}

bootRun {
    maxHeapSize '64m'
}

docker {
    name 'gcr.io/ditto-1470749749381/animeta-backend:latest'
    files tasks.bootJar.outputs, 'run-java.sh'
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = [
            'net.animeta.backend.dto.**'
    ]
    excludeClasses = [
            'net.animeta.backend.dto.JsonToObjectConverter'
    ]
    excludeClassPatterns = [
            '**$Companion'
    ]
    customTypeNamingFunction = "function(name, simpleName) { return name.substring(name.lastIndexOf('.') + 1) }"
    outputFile = "$projectDir/../../web/shared/types_generated.ts"
    outputFileType = TypeScriptFileType.implementationFile
    outputKind = 'module'
}
