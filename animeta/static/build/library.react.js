!function(t){function e(n){if(i[n])return i[n].exports;var o=i[n]={exports:{},id:n,loaded:!1};return t[n].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var i={};return e.m=t,e.c=i,e.p="/static/build/",e(0)}({0:function(t,e,i){function n(t,e){"use strict";r.call(this),this.$RecordStore_title=t,this.$RecordStore_categoryId=e}function o(t){return"/works/"+encodeURIComponent(t)+"/"}function a(){return{title:d.getTitle(),categoryId:d.getCategoryId()}}var r=i(1),s=i(9);for(var c in r)r.hasOwnProperty(c)&&(n[c]=r[c]);var l=null===r?null:r.prototype;n.prototype=Object.create(l),n.prototype.constructor=n,n.__superConstructor__=r,n.prototype.setTitle=function(t){"use strict";this.$RecordStore_title=t,this.emitChange()},n.prototype.getTitle=function(){"use strict";return this.$RecordStore_title},n.prototype.getCategoryId=function(){"use strict";return this.$RecordStore_categoryId},n.prototype.setCategoryId=function(t){"use strict";this.$RecordStore_categoryId=t,this.emitChange()};var d,u=React.createClass({displayName:"TitleEditView",componentDidMount:function(){var t=initTypeahead(this.refs.titleInput.getDOMNode());t.on("keypress",function(t){13==t.keyCode&&this.handleSave()}.bind(this))},render:function(){return React.DOM.div({className:"title-form"},React.DOM.input({ref:"titleInput",defaultValue:this.props.originalTitle}),React.DOM.button({onClick:this.handleSave},"저장")," ",React.DOM.a({href:"#",onClick:this.handleCancel},"취소"))},handleSave:function(){this.props.onSave(this.refs.titleInput.getDOMNode().value)},handleCancel:function(t){t.preventDefault(),this.props.onCancel()}}),p=React.createClass({displayName:"CategoryEditView",render:function(){var t="지정 안함";return this.props.selectedId&&(t=this.props.categoryList.filter(function(t){return t.id==this.props.selectedId}.bind(this))[0].name),React.DOM.span({className:"category-form btn"},React.DOM.label(null,"분류: "),t," ▼",React.DOM.select({value:this.props.selectedId,onChange:this.handleChange},React.DOM.option({value:""},"지정 안함"),this.props.categoryList.map(function(t){return React.DOM.option({value:t.id},t.name)})))},handleChange:function(t){this.props.onChange(t.target.value)}}),h=React.createClass({displayName:"HeaderView",getInitialState:function(){return{isEditingTitle:!1}},render:function(){var t;return t=this.state.isEditingTitle?u({recordId:this.props.recordId,originalTitle:this.props.title,onSave:this.handleTitleSave,onCancel:function(){return this.setState({isEditingTitle:!1})}.bind(this)}):[React.DOM.h1(null,React.DOM.a({href:o(this.props.title),className:"work"},this.props.title)),React.DOM.a({href:"#",className:"btn btn-edit-title",onClick:this.handleTitleEditButtonClick},"제목 수정")],React.DOM.div({className:"record-detail-header"},t,React.DOM.a({href:"/records/"+this.props.recordId+"/delete/",className:"btn btn-delete"},"삭제"),p({categoryList:this.props.categoryList,selectedId:this.props.categoryId,onChange:this.handleCategoryChange}))},handleTitleEditButtonClick:function(t){t.preventDefault(),this.setState({isEditingTitle:!0})},handleTitleSave:function(t){$.post("/records/"+this.props.recordId+"/update/title/",{title:t}).then(function(){d.setTitle(t),this.setState({isEditingTitle:!1})}.bind(this))},handleCategoryChange:function(t){$.post("/records/"+this.props.recordId+"/update/category/",{category:t}).then(function(){d.setCategoryId(t)})}}),f=React.createClass({displayName:"StatusInputView",getInitialState:function(){return{showSuffix:!0}},render:function(){return React.DOM.span(null,this.transferPropsTo(s({minSize:3,maxSize:10,onChange:this._updateSuffix,ref:"input"})),this.state.showSuffix?"화":null,React.DOM.span({className:"plus-one",style:{cursor:"pointer"},onClick:this.handlePlusOne},React.DOM.img({src:"/static/plus.gif",alt:"+1"})))},componentDidMount:function(){this._updateSuffix()},_updateSuffix:function(){var t=this.refs.input.getDOMNode();this.setState({showSuffix:t.value.match(/^(|.*\d)$/)})},handlePlusOne:function(){var t=this.refs.input.getDOMNode(),e=plusOne(t.value);t.value=e}}),m=React.createClass({displayName:"PostComposerView",render:function(){var t;return this.props.currentStatus&&(t=React.DOM.span({className:"progress-current"},this.props.currentStatus," → ")),React.DOM.form({className:"record-detail-update",method:"post","data-connected-services":this.props.connectedServices},React.DOM.div({className:"progress"},React.DOM.select({name:"status_type",defaultValue:this.props.initialStatusType},React.DOM.option({value:"watching"},"보는 중"),React.DOM.option({value:"finished"},"완료"),React.DOM.option({value:"suspended"},"중단"),React.DOM.option({value:"interested"},"볼 예정"))," @ ",t,f({id:"id_status",name:"status",defaultValue:plusOne(this.props.currentStatus)})),React.DOM.textarea({name:"comment",rows:3,cols:30,autoFocus:!0}),React.DOM.div({className:"actions"},"공유: ",React.DOM.input({type:"checkbox",id:"id_publish_twitter",name:"publish_twitter"}),React.DOM.label({htmlFor:"id_publish_twitter"},"트위터"),React.DOM.input({type:"checkbox",id:"id_publish_facebook",name:"publish_facebook"}),React.DOM.label({htmlFor:"id_publish_facebook"},"페이스북"),React.DOM.button({type:"submit"},"기록 추가")))},componentDidMount:function(){initServiceToggles($(this.getDOMNode()))}}),g=React.createClass({displayName:"AppView",getInitialState:function(){return a()},_onChange:function(){this.setState(a())},componentDidMount:function(){d.addChangeListener(this._onChange)},render:function(){return React.DOM.div(null,h({recordId:this.props.recordId,title:this.state.title,categoryId:this.state.categoryId,categoryList:this.props.categoryList}),m({currentStatus:this.props.status,initialStatusType:this.props.statusType,connectedServices:this.props.connectedServices}))}});d=new n(APP_DATA.title,APP_DATA.categoryId),React.renderComponent(g(APP_DATA),$(".library-container")[0]),$(document).ajaxError(function(t,e){if(e.responseText)try{var i=$.parseJSON(e.responseText);return void alert(i.message)}catch(n){}alert("서버 오류로 요청에 실패했습니다.")})},1:function(t){function e(){"use strict";this.$BaseStore_listeners=[]}e.prototype.addChangeListener=function(t){"use strict";this.$BaseStore_listeners.push(t)},e.prototype.removeChangeListener=function(t){"use strict";this.$BaseStore_listeners=this.$BaseStore_listeners.filter(function(e){return e!=t})},e.prototype.emitChange=function(t){"use strict";this.$BaseStore_listeners.forEach(function(e){return e(t)})},t.exports=e},9:function(t){var e=React.createClass({displayName:"AutoGrowInput",getInitialState:function(){return{size:this.props.minSize}},componentDidMount:function(){this.setState({size:this.getDOMNode().value.length})},render:function(){var t=Math.max(this.props.minSize,Math.min(this.props.maxSize,this.state.size))+"em";return this.transferPropsTo(React.DOM.input({onChange:this.handleChange,style:{width:t}}))},handleChange:function(t){this.setState({size:t.target.value.length})}});t.exports=e}});